"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"reportWebVitals\": () => (/* binding */ reportWebVitals)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"prop-types\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"react-redux\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _store_configureStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../store/configureStore */ \"./store/configureStore.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_store_configureStore__WEBPACK_IMPORTED_MODULE_4__]);\n_store_configureStore__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nconst _excluded = [\"Component\"];\nvar _jsxFileName = \"C:\\\\Users\\\\lee\\\\lee_Drive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prepare\\\\front\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n\n\nfunction NodeBird(_ref) {\n  let {\n    Component\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const {\n    store,\n    props\n  } = _store_configureStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].useWrappedStore(rest);\n  const {\n    pageProps\n  } = props;\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {\n    store: store,\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"meta\", {\n        charSet: \"utf-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"meta\", {\n        httpEquiv: \"X-UA-Compatible\",\n        content: \"ie=edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(\"title\", {\n        children: \"NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\nNodeBird.propTypes = {\n  Component: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().elementType.isRequired),\n  pageProps: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().any.isRequired)\n};\nfunction reportWebVitals(metric) {\n  console.log(metric);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NodeBird);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBRUEsU0FBU0ssUUFBVCxPQUEwQztFQUFBLElBQXhCO0lBQUVDO0VBQUYsQ0FBd0I7RUFBQSxJQUFSQyxJQUFROztFQUN4QyxNQUFNO0lBQUVDLEtBQUY7SUFBU0M7RUFBVCxJQUFtQkwsNkVBQUEsQ0FBd0JHLElBQXhCLENBQXpCO0VBQ0EsTUFBTTtJQUFFSTtFQUFGLElBQWdCRixLQUF0QjtFQUNBLG9CQUNFLDhEQUFDLGlEQUFEO0lBQVUsS0FBSyxFQUFFRCxLQUFqQjtJQUFBLHdCQUNFLDhEQUFDLGtEQUFEO01BQUEsd0JBQ0U7UUFBTSxPQUFPLEVBQUM7TUFBZDtRQUFBO1FBQUE7UUFBQTtNQUFBLFFBREYsZUFFRTtRQUNFLElBQUksRUFBQyxVQURQO1FBRUUsT0FBTyxFQUFDO01BRlY7UUFBQTtRQUFBO1FBQUE7TUFBQSxRQUZGLGVBTUU7UUFBTSxTQUFTLEVBQUMsaUJBQWhCO1FBQWtDLE9BQU8sRUFBQztNQUExQztRQUFBO1FBQUE7UUFBQTtNQUFBLFFBTkYsZUFPRTtRQUFBO01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQSxRQVBGO0lBQUE7TUFBQTtNQUFBO01BQUE7SUFBQSxRQURGLGVBVUUsOERBQUMsU0FBRCxvQkFBZUcsU0FBZjtNQUFBO01BQUE7TUFBQTtJQUFBLFFBVkY7RUFBQTtJQUFBO0lBQUE7SUFBQTtFQUFBLFFBREY7QUFjRDs7QUFDRE4sUUFBUSxDQUFDTyxTQUFULEdBQXFCO0VBQ25CTixTQUFTLEVBQUVMLDBFQURRO0VBRW5CVSxTQUFTLEVBQUVWLGtFQUF3QmE7QUFGaEIsQ0FBckI7QUFLTyxTQUFTRSxlQUFULENBQXlCQyxNQUF6QixFQUFpQztFQUN0Q0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLE1BQVo7QUFDRDtBQUVELGlFQUFlWixRQUFmLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1ub2RlYmlyZC1mcm9udC8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcclxuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xyXG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xyXG5cclxuaW1wb3J0IHdyYXBwZXIgZnJvbSBcIi4uL3N0b3JlL2NvbmZpZ3VyZVN0b3JlXCI7XHJcblxyXG5mdW5jdGlvbiBOb2RlQmlyZCh7IENvbXBvbmVudCwgLi4ucmVzdCB9KSB7XHJcbiAgY29uc3QgeyBzdG9yZSwgcHJvcHMgfSA9IHdyYXBwZXIudXNlV3JhcHBlZFN0b3JlKHJlc3QpO1xyXG4gIGNvbnN0IHsgcGFnZVByb3BzIH0gPSBwcm9wcztcclxuICByZXR1cm4gKFxyXG4gICAgPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+XHJcbiAgICAgIDxIZWFkPlxyXG4gICAgICAgIDxtZXRhIGNoYXJTZXQ9XCJ1dGYtOFwiIC8+XHJcbiAgICAgICAgPG1ldGFcclxuICAgICAgICAgIG5hbWU9XCJ2aWV3cG9ydFwiXHJcbiAgICAgICAgICBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCB1c2VyLXNjYWxhYmxlPW5vLCBpbml0aWFsLXNjYWxlPTEuMCwgbWF4aW11bS1zY2FsZT0xLjAsIG1pbmltdW0tc2NhbGU9MS4wXCJcclxuICAgICAgICAvPlxyXG4gICAgICAgIDxtZXRhIGh0dHBFcXVpdj1cIlgtVUEtQ29tcGF0aWJsZVwiIGNvbnRlbnQ9XCJpZT1lZGdlXCIgLz5cclxuICAgICAgICA8dGl0bGU+Tm9kZUJpcmQ8L3RpdGxlPlxyXG4gICAgICA8L0hlYWQ+XHJcbiAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cclxuICAgIDwvUHJvdmlkZXI+XHJcbiAgKTtcclxufVxyXG5Ob2RlQmlyZC5wcm9wVHlwZXMgPSB7XHJcbiAgQ29tcG9uZW50OiBQcm9wVHlwZXMuZWxlbWVudFR5cGUuaXNSZXF1aXJlZCxcclxuICBwYWdlUHJvcHM6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZXBvcnRXZWJWaXRhbHMobWV0cmljKSB7XHJcbiAgY29uc29sZS5sb2cobWV0cmljKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTm9kZUJpcmQ7XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIlByb3BUeXBlcyIsIkhlYWQiLCJQcm92aWRlciIsIndyYXBwZXIiLCJOb2RlQmlyZCIsIkNvbXBvbmVudCIsInJlc3QiLCJzdG9yZSIsInByb3BzIiwidXNlV3JhcHBlZFN0b3JlIiwicGFnZVByb3BzIiwicHJvcFR5cGVzIiwiZWxlbWVudFR5cGUiLCJpc1JlcXVpcmVkIiwiYW55IiwicmVwb3J0V2ViVml0YWxzIiwibWV0cmljIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./reducers/index.js":
/*!***************************!*\
  !*** ./reducers/index.js ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ \"redux\");\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./user */ \"./reducers/user.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./post */ \"./reducers/post.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_1__, _user__WEBPACK_IMPORTED_MODULE_2__, _post__WEBPACK_IMPORTED_MODULE_3__]);\n([axios__WEBPACK_IMPORTED_MODULE_1__, _user__WEBPACK_IMPORTED_MODULE_2__, _post__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\naxios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].defaults.baseURL = \"http://localhost:3065\";\naxios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].defaults.withCredentials = true; // (이전상태, 액션) => 다음상태\n\nconst rootReducer = (0,redux__WEBPACK_IMPORTED_MODULE_0__.combineReducers)({\n  user: _user__WEBPACK_IMPORTED_MODULE_2__[\"default\"].reducer,\n  post: _post__WEBPACK_IMPORTED_MODULE_3__[\"default\"].reducer\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rootReducer);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZWR1Y2Vycy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBQyw4REFBQSxHQUF5Qix1QkFBekI7QUFDQUEsc0VBQUEsR0FBaUMsSUFBakMsRUFDQTs7QUFDQSxNQUFNTSxXQUFXLEdBQUdQLHNEQUFlLENBQUM7RUFDbENRLElBQUksRUFBRU4scURBRDRCO0VBRWxDUSxJQUFJLEVBQUVQLHFEQUFpQk07QUFGVyxDQUFELENBQW5DO0FBS0EsaUVBQWVGLFdBQWYsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5vZGViaXJkLWZyb250Ly4vcmVkdWNlcnMvaW5kZXguanM/YjliNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMgfSBmcm9tIFwicmVkdXhcIjtcclxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5cclxuaW1wb3J0IHVzZXJTbGljZSBmcm9tIFwiLi91c2VyXCI7XHJcbmltcG9ydCBwb3N0U2xpY2UgZnJvbSBcIi4vcG9zdFwiO1xyXG5cclxuYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDY1XCI7XHJcbmF4aW9zLmRlZmF1bHRzLndpdGhDcmVkZW50aWFscyA9IHRydWU7XHJcbi8vICjsnbTsoITsg4Htg5wsIOyVoeyFmCkgPT4g64uk7J2M7IOB7YOcXHJcbmNvbnN0IHJvb3RSZWR1Y2VyID0gY29tYmluZVJlZHVjZXJzKHtcclxuICB1c2VyOiB1c2VyU2xpY2UucmVkdWNlcixcclxuICBwb3N0OiBwb3N0U2xpY2UucmVkdWNlcixcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCByb290UmVkdWNlcjtcclxuIl0sIm5hbWVzIjpbImNvbWJpbmVSZWR1Y2VycyIsImF4aW9zIiwidXNlclNsaWNlIiwicG9zdFNsaWNlIiwiZGVmYXVsdHMiLCJiYXNlVVJMIiwid2l0aENyZWRlbnRpYWxzIiwicm9vdFJlZHVjZXIiLCJ1c2VyIiwicmVkdWNlciIsInBvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./reducers/index.js\n");

/***/ }),

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addComment\": () => (/* binding */ addComment),\n/* harmony export */   \"addPost\": () => (/* binding */ addPost),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"initialState\": () => (/* binding */ initialState),\n/* harmony export */   \"likePostRequest\": () => (/* binding */ likePostRequest),\n/* harmony export */   \"loadHashtagPosts\": () => (/* binding */ loadHashtagPosts),\n/* harmony export */   \"loadPost\": () => (/* binding */ loadPost),\n/* harmony export */   \"loadPosts\": () => (/* binding */ loadPosts),\n/* harmony export */   \"loadUserPosts\": () => (/* binding */ loadUserPosts),\n/* harmony export */   \"postInitialState\": () => (/* binding */ postInitialState),\n/* harmony export */   \"removePost\": () => (/* binding */ removePost),\n/* harmony export */   \"retweet\": () => (/* binding */ retweet),\n/* harmony export */   \"submitImage\": () => (/* binding */ submitImage),\n/* harmony export */   \"submitReport\": () => (/* binding */ submitReport),\n/* harmony export */   \"unlikePostRequest\": () => (/* binding */ unlikePostRequest),\n/* harmony export */   \"uploadImages\": () => (/* binding */ uploadImages)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-redux-wrapper */ \"next-redux-wrapper\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_2__]);\naxios__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n // import shortId from \"shortid\";\n// import { faker } from \"@faker-js/faker\";\n// faker.seed(24);\n\nconst initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  addRemoveLoading: false,\n  addRemoveDone: false,\n  addRemoveError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n  submitImageLoading: false,\n  submitImageDone: false,\n  submitImageError: null,\n  submitReportLoading: false,\n  submitReportDone: false,\n  submitReportError: null\n};\nconst postInitialState = initialState; // export const generateDummpyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.fullName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.fullName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n// const dummyComment = (data) => ({\n//   id: shortId.generate(),\n//   content: data,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n// });\n// const wait = (timeToDelay) =>\n//   new Promise((resolve) => setTimeout(resolve, timeToDelay));\n// export const ADD_POST = \"ADD_POST\";\n// export const ADD_COMMENT = \"ADD_COMMENT\";\n// export const REMOVE_POST = \"REMOVE_POST\";\n// export const LOAD_POST = \"LOAD_POST\";\n//action creator\n\nconst addPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/addPost\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    // formData는 브라우저 정책때문에 그냥 console.log를 찍는다고 볼 수 없다 이렇게 반복문을 돌려서 확인해야한다\n    // for (let key of data.keys()) {\n    //   console.log(key);\n    // }\n    // for (let value of data.values()) {\n    //   console.log(value);\n    // }\n    // console.log(data.name);\n    console.log(data);\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/post\", data);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response);\n  }\n});\nconst removePost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/remove\", async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/post/${data.postId}/remove`);\n  return response.data;\n});\nconst addComment = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"post/comment\", async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`/post/${data.postId}/comment`, data);\n  return response.data;\n}); // 비동기 요청을 넣어야하는데 프론트로만 할 떄는 가짜 비동기 요청을 만들어야해서 setTimeout으로 해결\n\nconst fetchDataFromServer = async data => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(data), 5000); // Simulate async fetch with a delay of 1 second\n  });\n};\n\nconst throttledFetchData = (0,lodash__WEBPACK_IMPORTED_MODULE_1__.throttle)(fetchDataFromServer, 5000); // 게시글 여러개 로드\n\nconst loadPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/postloadposts\", async lastId => {\n  throttledFetchData();\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/posts?lastId=${lastId || 0}`);\n  return response.data;\n}); // 게시글 하나만 로드\n\nconst loadPost = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"post/loadpost\", async data => {\n  console.log(data);\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/post/${data.postId}`);\n  console.log(response.data);\n  return response.data;\n}); //유저가 쓴 모든 게시글 로드\n\nconst loadUserPostsThrottle = async ({\n  id,\n  lastId\n}) => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/user/${id}/posts?lastId=${lastId || 0}`);\n  return response.data;\n};\n\nconst loadUserPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"post/loaduserpost\", (0,lodash__WEBPACK_IMPORTED_MODULE_1__.throttle)(loadUserPostsThrottle, 5000));\n\nconst loadHashtagPostsThrottle = async ({\n  lastId,\n  tag\n}) => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/hashtag/${encodeURIComponent(tag)}?lastId=${lastId || 0}`);\n  return response.data;\n};\n\nconst loadHashtagPosts = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"post/loadHashtagPosts\", (0,lodash__WEBPACK_IMPORTED_MODULE_1__.throttle)(loadHashtagPostsThrottle, 5000));\nconst likePostRequest = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"post/like\", async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(`/post/${data.postId}/like`);\n  return response.data;\n});\nconst unlikePostRequest = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/unlike\", async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/post/${data.postId}/like`);\n  return response.data;\n});\nconst uploadImages = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/uploadImages\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/post/images\", data);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response);\n  }\n});\nconst retweet = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/retweet\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`/post/${data}/retweet`);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response);\n  }\n});\nconst submitImage = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/submitImage\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/post/images\", data);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response);\n  }\n});\n\nconst submitReportThrottle = async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/post/submitReport\", data);\n  return response.data;\n};\n\nconst submitReport = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/post/submitReport\", (0,lodash__WEBPACK_IMPORTED_MODULE_1__.throttle)(submitReportThrottle, 300000)); // const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.text,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n//redux toolkit에는 기본적으로 immer가 적용이 되어진다 그래서 불변성을 안지키고 바로 값을 바꿀 수 있는\n\nconst postSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n  name: \"post\",\n  initialState,\n  reducers: {\n    // 비동기 액션이기 때문에 async를 설정안해도 된다\n    removeImage(state, action) {\n      state.imagePaths = state.imagePaths.filter((v, i) => i !== action.payload);\n    }\n\n  },\n  extraReducers: builder => builder.addCase(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__.HYDRATE, (state, action) => _objectSpread(_objectSpread({}, state), action.payload.post)).addCase(addPost.pending, (state, action) => {\n    state.addPostLoading = true;\n    state.addPostDone = false;\n    state.addPostError = null;\n  }).addCase(addPost.fulfilled, (state, action) => {\n    // dispatch로 넘겨준 데이터는 action.payload에 저장된다\n    console.log(action);\n    state.mainPosts.unshift(action.payload);\n    state.addPostLoading = false;\n    state.addPostDone = true;\n    state.imagePaths = [];\n  }).addCase(addPost.rejected, (state, action) => {\n    state.addPostLoading = false;\n    state.addPostError = action.error;\n  }) //post를 지우는 action\n  .addCase(removePost.pending, (state, action) => {\n    console.log(action);\n    state.addRemoveLoading = true;\n    state.addRemoveDone = false;\n    state.addRemoveError = null;\n  }).addCase(removePost.fulfilled, (state, action) => {\n    console.log(action);\n    state.mainPosts = state.mainPosts.filter(v => v.id !== action.payload.PostId);\n    state.addRemoveLoading = false;\n    state.addRemoveDone = true;\n  }).addCase(removePost.rejected, (state, action) => {\n    console.log(action);\n    state.addRemoveLoading = false;\n    state.addRemoveError = action.error;\n  }) // 뎃글을 다는 action\n  .addCase(addComment.pending, state => {\n    state.addCommentLoading = true;\n    state.addCommentDone = false;\n    state.addCommentError = null;\n  }).addCase(addComment.fulfilled, (state, action) => {\n    console.log(action); // 뎃글을 달 게시물을 찾는다\n\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    console.log(\"state\", state, \"post\", post, \"Comments\", post.Coments); // 찾은 id로 mainPosts에서 id에 맞는 post를 찾는다\n\n    post.Comments.unshift(action.payload);\n    state.addCommentLoading = false;\n    state.addCommentDone = true;\n  }).addCase(addComment.rejected, (state, action) => {\n    state.addCommentLoading = false;\n    state.addCommentError = action.error;\n  }) // loadPosts 게시글 여러개\n  .addCase(loadPosts.pending, (state, action) => {\n    state.loadPostsLoading = true;\n    state.loadPostsDone = false;\n  }).addCase(loadPosts.fulfilled, (state, action) => {\n    state.mainPosts = state.mainPosts.concat(action.payload);\n    state.hasMorePosts = action.payload.length === 10;\n    state.loadPostsLoading = false;\n    state.loadPostsDone = true;\n  }).addCase(loadPosts.rejected, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsError = action.error;\n  }) // loadPost 게시글 하나만\n  .addCase(loadPost.pending, (state, action) => {\n    state.loadPostLoading = true;\n    state.loadPostDone = false;\n  }).addCase(loadPost.fulfilled, (state, action) => {\n    state.singlePost = action.payload;\n    state.loadPostLoading = false;\n    state.loadPostDone = true;\n  }).addCase(loadPost.rejected, (state, action) => {\n    console.log(action);\n    state.loadPostLoading = false;\n    state.loadPostError = action.error;\n  }).addCase(loadUserPosts.pending, (state, action) => {\n    state.loadPostsLoading = true;\n    state.loadPostsDone = false;\n    state.loadPostsError = null;\n  }).addCase(loadUserPosts.fulfilled, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsDone = true;\n    state.mainPosts = state.mainPosts.concat(action.payload);\n    state.hasMorePosts = action.payload.length === 10;\n  }).addCase(loadUserPosts.rejected, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsError = action.error;\n  }).addCase(loadHashtagPosts.pending, (state, action) => {\n    state.loadPostsLoading = true;\n    state.loadPostsDone = false;\n    state.loadPostsError = null;\n  }).addCase(loadHashtagPosts.fulfilled, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsDone = true;\n    state.mainPosts = state.mainPosts.concat(action.payload);\n    state.hasMorePosts = action.payload.length === 10;\n  }).addCase(loadHashtagPosts.rejected, (state, action) => {\n    state.loadPostsLoading = false;\n    state.loadPostsError = action.error;\n  }).addCase(likePostRequest.pending, (state, action) => {\n    state.likePostLoading = true;\n    state.likePostDone = false;\n  }).addCase(likePostRequest.fulfilled, (state, action) => {\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    post.Likers.push({\n      id: action.payload.UserId\n    });\n    state.likePostLoading = false;\n    state.likePostDone = true;\n  }).addCase(likePostRequest.rejected, (state, action) => {\n    state.likePostLoading = false;\n    state.likePostError = action.error;\n  }).addCase(unlikePostRequest.pending, (state, action) => {\n    state.unlikePostLoading = true;\n    state.unlikePostDone = false;\n  }).addCase(unlikePostRequest.fulfilled, (state, action) => {\n    const post = state.mainPosts.find(v => v.id === action.payload.PostId);\n    post.Likers = post.Likers.filter(v => v.id !== action.payload.UserId);\n    state.unlikePostLoading = false;\n    state.unlikePostDone = true;\n  }).addCase(unlikePostRequest.rejected, (state, action) => {\n    state.unlikePostLoading = false;\n    state.unlikePostError = action.payload.data;\n  }).addCase(uploadImages.pending, (state, action) => {\n    state.uploadImagesLoading = true;\n    state.uploadImagesDone = false;\n    state.uploadImagesError = null;\n  }).addCase(uploadImages.fulfilled, (state, action) => {\n    state.imagePaths = action.payload;\n    state.uploadImagesLoading = false;\n    state.uploadImagesDone = true;\n  }).addCase(uploadImages.rejected, (state, action) => {\n    state.uploadImagesLoading = false;\n    state.uploadImagesError = action.payload.data;\n  }).addCase(retweet.pending, (state, action) => {\n    console.log(action);\n    state.retweetLoading = true;\n    state.retweetDone = false;\n    state.retweetError = null;\n  }).addCase(retweet.fulfilled, (state, action) => {\n    console.log(action);\n    state.retweetLoading = false;\n    state.retweetDone = true;\n    state.mainPosts.unshift(action.payload);\n  }).addCase(retweet.rejected, (state, action) => {\n    state.retweetLoading = false;\n    state.retweetError = action.payload.data;\n  }).addCase(submitImage.pending, (state, action) => {\n    console.log(action);\n    state.submitImageLoading = true;\n    state.submitImageDone = false;\n    state.submitImageError = null;\n  }).addCase(submitImage.fulfilled, (state, action) => {\n    console.log(action);\n    state.submitImageLoading = false;\n    state.submitImageDone = true; // state.mainPosts.unshift(action.payload);\n  }).addCase(submitImage.rejected, (state, action) => {\n    state.submitImageLoading = false;\n    state.submitImageError = action.payload.data;\n  }).addDefaultCase(state => state)\n}); // export default (state = initialState, action) => {\n//   switch (action.type) {\n//     case ADD_POST: {\n//       return {\n//         ...state,\n//         mainPosts: [dummyPost, ...state.mainPosts],\n//         postAdded: true,\n//       };\n//     }\n//     default: {\n//       return {\n//         ...state,\n//       };\n//     }\n//   }\n// };\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (postSlice);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/post.js\n");

/***/ }),

/***/ "./reducers/user.js":
/*!**************************!*\
  !*** ./reducers/user.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ADD_POST_TO_ME\": () => (/* binding */ ADD_POST_TO_ME),\n/* harmony export */   \"FOLLOW_REQUEST\": () => (/* binding */ FOLLOW_REQUEST),\n/* harmony export */   \"LOG_IN\": () => (/* binding */ LOG_IN),\n/* harmony export */   \"LOG_IN_FAILURE\": () => (/* binding */ LOG_IN_FAILURE),\n/* harmony export */   \"LOG_IN_SUCCESS\": () => (/* binding */ LOG_IN_SUCCESS),\n/* harmony export */   \"LOG_OUT\": () => (/* binding */ LOG_OUT),\n/* harmony export */   \"REMOVE_POST_OF_ME\": () => (/* binding */ REMOVE_POST_OF_ME),\n/* harmony export */   \"SIGN_UP\": () => (/* binding */ SIGN_UP),\n/* harmony export */   \"SIGN_UP_SUCCESS\": () => (/* binding */ SIGN_UP_SUCCESS),\n/* harmony export */   \"UNFOLLOW_REQUEST\": () => (/* binding */ UNFOLLOW_REQUEST),\n/* harmony export */   \"addPostToMe\": () => (/* binding */ addPostToMe),\n/* harmony export */   \"changeNickname\": () => (/* binding */ changeNickname),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"followRequest\": () => (/* binding */ followRequest),\n/* harmony export */   \"initialState\": () => (/* binding */ initialState),\n/* harmony export */   \"loadFollowers\": () => (/* binding */ loadFollowers),\n/* harmony export */   \"loadFollowings\": () => (/* binding */ loadFollowings),\n/* harmony export */   \"loadMyInfo\": () => (/* binding */ loadMyInfo),\n/* harmony export */   \"loadUser\": () => (/* binding */ loadUser),\n/* harmony export */   \"loginAction\": () => (/* binding */ loginAction),\n/* harmony export */   \"logoutAction\": () => (/* binding */ logoutAction),\n/* harmony export */   \"removePostOfMe\": () => (/* binding */ removePostOfMe),\n/* harmony export */   \"removefollowerRequest\": () => (/* binding */ removefollowerRequest),\n/* harmony export */   \"signUp\": () => (/* binding */ signUp),\n/* harmony export */   \"unfollowRequest\": () => (/* binding */ unfollowRequest)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-redux-wrapper */ \"next-redux-wrapper\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_2__]);\naxios__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n //Hydrate 즉 Hydration 은서버사이드렌더링을 통한 이미 그려져 불러온 HTML들과 더불어 번들링 된 JS파일들을 클라이언트 단에서 상호작용할 수 있도록 융합되는 과정\n\nconst initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInError: null,\n  // 로그인 에러\n  logInDone: false,\n  // 로그인 상태 체크\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutError: null,\n  // 로그아웃 에러\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  // 회원가입 상태 체크\n  signUpError: null,\n  // 회원가입 에러\n  followLoading: false,\n  // 팔로우 시도중\n  followDone: false,\n  // 팔로우 상태 체크\n  followError: null,\n  // 팔로우 에러\n  unfollowLoading: false,\n  // 언팔로우 시도중\n  unfollowDone: false,\n  // 언팔로우 상태 체크\n  unfollowError: null,\n  // 언팔로우 에러\n  loadMyInfoLoading: false,\n  // 새로고침후 유저 정보 가져오는 시도중\n  loadMyInfoDone: null,\n  // 새로고침후 유저 정보 가져오는 상태 체크\n  loadMyInfoError: false,\n  // 새로고침후 유저 정보 가져오는 것 에러\n  loadUserLoading: false,\n  //  유저 정보 가져오는 시도중\n  loadUserDone: false,\n  //  유저 정보 가져오는 상태 체크\n  loadUserError: null,\n  //  유저 정보 가져오는 것 에러\n  changeNicknameLoading: false,\n  // 닉네임 변경을 시도중\n  changeNicknameDone: null,\n  // 닉네임 변경을 상태 체크\n  changeNicknameError: false,\n  // 닉네임 변경 중 에러\n  loadFollowersLoading: false,\n  // 팔로워 목록을 시도중\n  loadFollowersDone: null,\n  // 팔로워 목록을 상태 체크\n  loadFollowersError: false,\n  // 팔로워 목록 검색 중 에러\n  loadFollowingsLoading: false,\n  // 팔로워 목록을 시도중\n  loadFollowingsDone: null,\n  // 팔로워 목록을 상태 체크\n  loadFollowingsError: false,\n  // 팔로워 목록 검색 중 에러\n  removefollowerRequestLoading: false,\n  // 팔로워 목록을 시도중\n  removefollowerRequestDone: null,\n  // 팔로워 목록을 상태 체크\n  removefollowerRequestError: false,\n  // 팔로워 목록 검색 중 에러\n  me: null\n};\nconst SIGN_UP = \"SIGN_UP\";\nconst SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nconst LOG_IN = \"LOG_IN\"; // 액션의 이름\n\nconst LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\"; // 액션의 이름\n\nconst LOG_IN_FAILURE = \"LOG_IN_FAILURE\"; // 액션의 이름\n\nconst LOG_OUT = \"LOG_OUT\";\nconst ADD_POST_TO_ME = \"ADD_POST_TO_ME\"; // post 추가하는 액션\n\nconst REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; // post 삭제하는 액션\n\nconst FOLLOW_REQUEST = \"FOLLOW_REQUEST\"; // 팔로우 하는 액션\n\nconst UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\"; // 언팔로우 하는 액션\n// const dummyUser = (data) => ({\n//   ...data,\n//   nickname: \"제로초\",\n//   id: 1,\n//   Posts: [{ id: 1 }],\n//   Followings: [{ id: \"부기초\" }, { id: \"Chanho park\" }, { id: \"PAKA\" }],\n//   Followers: [{ id: \"부기초\" }, { id: \"Chanho park\" }, { id: \"PAKA\" }],\n// });\n// const wait = (timeToDelay) =>\n//   new Promise((resolve) => setTimeout(resolve, timeToDelay));\n\nconst loginAction = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"user/login\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/user/login\", data);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response);\n  }\n}); // export const loginAction = (data) => {\n//   return {\n//     type: LOG_IN,\n//     data,\n//   };\n// };\n\nconst logoutAction = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(LOG_OUT, async () => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/user/logout\");\n  return response.data;\n}); // export const logoutAction = {\n//   type: LOG_OUT,\n// };\n\nconst signUp = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"user/signup\", async (data, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"/user\", data); // response data안에config.data에 회원가입 정보들이 들어있다\n\n    return fulfillWithValue(response.config.data);\n  } catch (error) {\n    //error.response.data 안에 send로 보낸 message가 들어있다\n    throw rejectWithValue(error.response.data);\n  }\n}); // export const signUp = (data) => {\n//   return {\n//     type: SIGN_UP,\n//     data,\n//   };\n// };\n\nconst followRequest = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/user/follow\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(`/user/${data}/follow`, data);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response.data);\n  }\n});\nconst unfollowRequest = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"user/unfollow\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/user/${data}/follow`, data);\n    console.log(response);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response.data);\n  }\n});\nconst loadMyInfo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/user/LoadMyInfo\", async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"/user\", data);\n  return response.data;\n});\nconst loadUser = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"user/loadUser\", async data => {\n  console.log(\"맞지?\");\n  console.log(data.userId);\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(`/user/${data.userId}`);\n  console.log(response.data);\n  return response.data;\n});\nconst changeNickname = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/user/nickname\", async data => {\n  const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].patch(\"/user/nickname\", {\n    nickname: data\n  });\n  return response.data;\n});\nconst loadFollowers = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/user/loadFollowers\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"/user/followers\");\n    console.log(response);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response.data);\n  }\n});\nconst loadFollowings = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/user/loadFollowings\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"/user/followings\");\n    console.log(response);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response.data);\n  }\n});\nconst removefollowerRequest = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"/user/removeFollower\", async (data, {\n  fulfillWithValue,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"][\"delete\"](`/user/follower/${data}`);\n    console.log(response);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    throw rejectWithValue(error.response.data);\n  }\n});\nconst userSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n  name: \"user\",\n  initialState,\n  reducers: {\n    addPostToMe(draft, action) {\n      // 값을 하나만 전달해서 값이 바로 payload에 저장이된다\n      // 내가 만든 포스트를 me state에 저장하는 reducer\n      draft.me.Posts.unshift({\n        id: action.payload\n      });\n    },\n\n    removePostOfMe(draft, action) {\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.payload);\n    }\n\n  },\n  // 외부에서 action을 만든것은 extraReducers로 가져와서 사용한다 주로 createAsyncThunk로 action을 만들 때 사용한다\n  extraReducers: builder => builder.addCase(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_3__.HYDRATE, (state, action) => _objectSpread(_objectSpread({}, state), action.payload.user)).addCase(loginAction.pending, state => {\n    state.logInLoading = true;\n    state.logInDone = false;\n  }).addCase(loginAction.fulfilled, (state, action) => {\n    state.logInLoading = false;\n    state.logInDone = true;\n    state.me = action.payload;\n    state.loginData = action.payload;\n  }).addCase(loginAction.rejected, (state, action) => {\n    state.logInLoading = false;\n    state.logInError = action.payload.data.message;\n  }).addCase(logoutAction.pending, state => {\n    state.logOutLoading = true;\n    state.logInDone = true;\n  }).addCase(logoutAction.fulfilled, state => {\n    state.logOutLoading = false;\n    state.logInDone = false;\n    state.me = null;\n  }).addCase(logoutAction.rejected, (state, action) => {\n    state.logOutLoading = false;\n    state.logOutError = action.payload;\n  }) //signUp 리듀서\n  .addCase(signUp.pending, (state, action) => {\n    state.signUpLoading = true;\n    state.signUpDone = false;\n  }).addCase(signUp.fulfilled, (state, action) => {\n    state.signUpLoading = false;\n    state.signUpDone = true;\n    state.signUpData = action.payload;\n  }).addCase(signUp.rejected, (state, action) => {\n    state.signUpError = action.payload;\n  }) // 팔로우 리듀서\n  .addCase(followRequest.pending, (state, action) => {\n    state.followLoading = true;\n    state.followError = null;\n    state.followDone = false;\n  }).addCase(followRequest.fulfilled, (state, action) => {\n    state.followLoading = false;\n    state.followDone = true;\n    state.me.Followings.push({\n      id: action.payload.Userid\n    });\n  }).addCase(followRequest.rejected, (state, action) => {\n    state.followError = action.error;\n  }) // 언팔로우 리듀서\n  .addCase(unfollowRequest.pending, (state, action) => {\n    state.unfollowLoading = true;\n  }).addCase(unfollowRequest.fulfilled, (state, action) => {\n    state.unfollowLoading = false;\n    state.unfollowDone = true;\n    state.me.Followings = state.me.Followings.filter(v => v.id !== action.payload.Userid);\n  }).addCase(unfollowRequest.rejected, (state, action) => {\n    state.unfollowError = action.error;\n  }) // 새로고침 후 유저정보 가져오는 리듀서\n  .addCase(loadMyInfo.pending, (state, action) => {\n    state.loadMyInfoLoading = true;\n    state.loadMyInfoError = null;\n    state.loadMyInfoDone = false;\n  }).addCase(loadMyInfo.fulfilled, (state, action) => {\n    state.loadMyInfoLoading = false;\n    state.me = action.payload;\n    state.loadMyInfoDone = true;\n  }).addCase(loadMyInfo.rejected, (state, action) => {\n    state.loadMyInfoLoading = false;\n    state.loadMyInfoError = action.error;\n  }) // 다른유저정보 가져오는 리듀서\n  .addCase(loadUser.pending, draft => {\n    draft.loadUserLoading = true;\n    draft.loadUserError = null;\n    draft.loadUserDone = false;\n  }).addCase(loadUser.fulfilled, (draft, action) => {\n    draft.loadUserLoading = false;\n    draft.userInfo = action.payload;\n    draft.loadUserDone = true;\n  }).addCase(loadUser.rejected, (draft, action) => {\n    draft.loadUserLoading = false;\n    draft.loadUserError = action.error;\n  }) // 유저 닉네임을 변경하는 리듀서\n  .addCase(changeNickname.pending, (state, action) => {\n    console.log(action);\n    state.changeNicknameLoading = true;\n    state.changeNicknameError = null;\n    state.changeNicknameDone = false;\n  }).addCase(changeNickname.fulfilled, (state, action) => {\n    console.log(action);\n    state.me.nickname = action.payload.nickname;\n    state.changeNicknameLoading = false;\n    state.changeNicknameDone = true;\n  }).addCase(changeNickname.rejected, (state, action) => {\n    console.log(action);\n    state.changeNicknameLoading = false;\n    state.changeNicknameError = action.error;\n  }) // 팔로워 목록을 가져오는 리듀서\n  .addCase(loadFollowers.pending, (state, action) => {\n    console.log(action);\n    state.loadFollowersLoading = true;\n    state.loadFollowersError = null;\n    state.loadFollowersDone = false;\n  }).addCase(loadFollowers.fulfilled, (state, action) => {\n    console.log(action);\n    state.me.Followers = action.payload;\n    state.loadFollowersLoading = false;\n    state.loadFollowersDone = true;\n  }).addCase(loadFollowers.rejected, (state, action) => {\n    console.log(action);\n    state.loadFollowersLoading = false;\n    state.loadFollowersError = action.error;\n  }) // 팔로잉 목록을 가져오는 리듀서\n  .addCase(loadFollowings.pending, (state, action) => {\n    console.log(action);\n    state.loadFollowingsLoading = true;\n    state.loadFollowingsError = null;\n    state.loadFollowingsDone = false;\n  }).addCase(loadFollowings.fulfilled, (state, action) => {\n    console.log(action);\n    state.me.Followings = action.payload;\n    state.loadFollowingsLoading = false;\n    state.loadFollowingsDone = true;\n  }).addCase(loadFollowings.rejected, (state, action) => {\n    console.log(action);\n    state.loadFollowingsLoading = false;\n    state.loadFollowingsError = action.error;\n  }) // 팔로워 차단하는 가져오는 리듀서\n  .addCase(removefollowerRequest.pending, (state, action) => {\n    console.log(action);\n    state.removefollowerRequestLoading = true;\n    state.removefollowerRequestError = null;\n    state.removefollowerRequestDone = false;\n  }).addCase(removefollowerRequest.fulfilled, (state, action) => {\n    console.log(action);\n    state.me.Followers = state.me.Followers.filter(v => v.id !== action.payload.UserId);\n    state.removefollowerRequestLoading = false;\n    state.removefollowerRequestDone = true;\n  }).addCase(removefollowerRequest.rejected, (state, action) => {\n    console.log(action);\n    state.removefollowerRequestLoading = false;\n    state.removefollowerRequestError = action.error;\n  }).addDefaultCase(state => state)\n});\nconst {\n  addPostToMe,\n  removePostOfMe\n} = userSlice.actions;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (userSlice);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/user.js\n");

/***/ }),

/***/ "./store/configureStore.js":
/*!*********************************!*\
  !*** ./store/configureStore.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"@reduxjs/toolkit\");\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-redux-wrapper */ \"next-redux-wrapper\");\n/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _reducers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../reducers */ \"./reducers/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_reducers__WEBPACK_IMPORTED_MODULE_2__]);\n_reducers__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nfunction getServerState() {\n  return typeof document !== \"undefined\" ? JSON.parse(document.querySelector(\"#__NEXT_DATA__\").textContent)?.props.pageProps.initialState : undefined;\n}\n\nconst serverState = getServerState();\nconsole.log(\"serverState\", serverState);\n\nconst makeStore = () => (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.configureStore)({\n  reducer: _reducers__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  devTools: true,\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\n  preloadedState: serverState // SSR\n\n});\n\nconst wrapper = (0,next_redux_wrapper__WEBPACK_IMPORTED_MODULE_1__.createWrapper)(makeStore);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (wrapper); // import { configureStore, createListenerMiddleware } from \"@reduxjs/toolkit\";\n// import { createWrapper } from \"next-redux-wrapper\";\n// import reducer from \"../reducers\";\n// const listenerMiddleware = createListenerMiddleware();\n// function getServerState() {\n//   return typeof document !== \"undefined\"\n//     ? JSON.parse(document.querySelector(\"#__NEXT_DATA__\").textContent)?.props\n//         .pageProps.initialState\n//     : undefined;\n// }\n// const serverState = getServerState();\n// console.log(\"serverState\", serverState);\n// const makeStore = () =>\n//   configureStore({\n//     reducer,\n//     devTools: true,\n//     middleware: (getDefaultMiddleware) =>\n//       getDefaultMiddleware({ serializableCheck: false }).prepend(\n//         listenerMiddleware.middleware\n//       ),\n//     preloadedState: serverState, // SSR\n//   });\n// export default createWrapper(makeStore);\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdG9yZS9jb25maWd1cmVTdG9yZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0csY0FBVCxHQUEwQjtFQUN4QixPQUFPLE9BQU9DLFFBQVAsS0FBb0IsV0FBcEIsR0FDSEMsSUFBSSxDQUFDQyxLQUFMLENBQVdGLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QixnQkFBdkIsRUFBeUNDLFdBQXBELEdBQWtFQyxLQUFsRSxDQUNHQyxTQURILENBQ2FDLFlBRlYsR0FHSEMsU0FISjtBQUlEOztBQUNELE1BQU1DLFdBQVcsR0FBR1YsY0FBYyxFQUFsQztBQUNBVyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaLEVBQTJCRixXQUEzQjs7QUFDQSxNQUFNRyxTQUFTLEdBQUcsTUFDaEJoQixnRUFBYyxDQUFDO0VBQ2JFLE9BRGE7RUFFYmUsUUFBUSxFQUFFLElBRkc7RUFHYkMsVUFBVSxFQUFHQyxvQkFBRCxJQUEwQkEsb0JBQW9CLEVBSDdDO0VBSWJDLGNBQWMsRUFBRVAsV0FKSCxDQUlnQjs7QUFKaEIsQ0FBRCxDQURoQjs7QUFPQSxNQUFNUSxPQUFPLEdBQUdwQixpRUFBYSxDQUFDZSxTQUFELENBQTdCO0FBQ0EsaUVBQWVLLE9BQWYsR0FFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLDJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3Qtbm9kZWJpcmQtZnJvbnQvLi9zdG9yZS9jb25maWd1cmVTdG9yZS5qcz9mMjAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZ3VyZVN0b3JlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHsgY3JlYXRlV3JhcHBlciB9IGZyb20gXCJuZXh0LXJlZHV4LXdyYXBwZXJcIjtcclxuaW1wb3J0IHJlZHVjZXIgZnJvbSBcIi4uL3JlZHVjZXJzXCI7XHJcblxyXG5mdW5jdGlvbiBnZXRTZXJ2ZXJTdGF0ZSgpIHtcclxuICByZXR1cm4gdHlwZW9mIGRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiXHJcbiAgICA/IEpTT04ucGFyc2UoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX05FWFRfREFUQV9fXCIpLnRleHRDb250ZW50KT8ucHJvcHNcclxuICAgICAgICAucGFnZVByb3BzLmluaXRpYWxTdGF0ZVxyXG4gICAgOiB1bmRlZmluZWQ7XHJcbn1cclxuY29uc3Qgc2VydmVyU3RhdGUgPSBnZXRTZXJ2ZXJTdGF0ZSgpO1xyXG5jb25zb2xlLmxvZyhcInNlcnZlclN0YXRlXCIsIHNlcnZlclN0YXRlKTtcclxuY29uc3QgbWFrZVN0b3JlID0gKCkgPT5cclxuICBjb25maWd1cmVTdG9yZSh7XHJcbiAgICByZWR1Y2VyLFxyXG4gICAgZGV2VG9vbHM6IHRydWUsXHJcbiAgICBtaWRkbGV3YXJlOiAoZ2V0RGVmYXVsdE1pZGRsZXdhcmUpID0+IGdldERlZmF1bHRNaWRkbGV3YXJlKCksXHJcbiAgICBwcmVsb2FkZWRTdGF0ZTogc2VydmVyU3RhdGUsIC8vIFNTUlxyXG4gIH0pO1xyXG5jb25zdCB3cmFwcGVyID0gY3JlYXRlV3JhcHBlcihtYWtlU3RvcmUpO1xyXG5leHBvcnQgZGVmYXVsdCB3cmFwcGVyO1xyXG5cclxuLy8gaW1wb3J0IHsgY29uZmlndXJlU3RvcmUsIGNyZWF0ZUxpc3RlbmVyTWlkZGxld2FyZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XHJcbi8vIGltcG9ydCB7IGNyZWF0ZVdyYXBwZXIgfSBmcm9tIFwibmV4dC1yZWR1eC13cmFwcGVyXCI7XHJcbi8vIGltcG9ydCByZWR1Y2VyIGZyb20gXCIuLi9yZWR1Y2Vyc1wiO1xyXG4vLyBjb25zdCBsaXN0ZW5lck1pZGRsZXdhcmUgPSBjcmVhdGVMaXN0ZW5lck1pZGRsZXdhcmUoKTtcclxuLy8gZnVuY3Rpb24gZ2V0U2VydmVyU3RhdGUoKSB7XHJcbi8vICAgcmV0dXJuIHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIlxyXG4vLyAgICAgPyBKU09OLnBhcnNlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19ORVhUX0RBVEFfX1wiKS50ZXh0Q29udGVudCk/LnByb3BzXHJcbi8vICAgICAgICAgLnBhZ2VQcm9wcy5pbml0aWFsU3RhdGVcclxuLy8gICAgIDogdW5kZWZpbmVkO1xyXG4vLyB9XHJcbi8vIGNvbnN0IHNlcnZlclN0YXRlID0gZ2V0U2VydmVyU3RhdGUoKTtcclxuLy8gY29uc29sZS5sb2coXCJzZXJ2ZXJTdGF0ZVwiLCBzZXJ2ZXJTdGF0ZSk7XHJcbi8vIGNvbnN0IG1ha2VTdG9yZSA9ICgpID0+XHJcbi8vICAgY29uZmlndXJlU3RvcmUoe1xyXG4vLyAgICAgcmVkdWNlcixcclxuLy8gICAgIGRldlRvb2xzOiB0cnVlLFxyXG4vLyAgICAgbWlkZGxld2FyZTogKGdldERlZmF1bHRNaWRkbGV3YXJlKSA9PlxyXG4vLyAgICAgICBnZXREZWZhdWx0TWlkZGxld2FyZSh7IHNlcmlhbGl6YWJsZUNoZWNrOiBmYWxzZSB9KS5wcmVwZW5kKFxyXG4vLyAgICAgICAgIGxpc3RlbmVyTWlkZGxld2FyZS5taWRkbGV3YXJlXHJcbi8vICAgICAgICksXHJcbi8vICAgICBwcmVsb2FkZWRTdGF0ZTogc2VydmVyU3RhdGUsIC8vIFNTUlxyXG4vLyAgIH0pO1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgY3JlYXRlV3JhcHBlcihtYWtlU3RvcmUpO1xyXG4iXSwibmFtZXMiOlsiY29uZmlndXJlU3RvcmUiLCJjcmVhdGVXcmFwcGVyIiwicmVkdWNlciIsImdldFNlcnZlclN0YXRlIiwiZG9jdW1lbnQiLCJKU09OIiwicGFyc2UiLCJxdWVyeVNlbGVjdG9yIiwidGV4dENvbnRlbnQiLCJwcm9wcyIsInBhZ2VQcm9wcyIsImluaXRpYWxTdGF0ZSIsInVuZGVmaW5lZCIsInNlcnZlclN0YXRlIiwiY29uc29sZSIsImxvZyIsIm1ha2VTdG9yZSIsImRldlRvb2xzIiwibWlkZGxld2FyZSIsImdldERlZmF1bHRNaWRkbGV3YXJlIiwicHJlbG9hZGVkU3RhdGUiLCJ3cmFwcGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./store/configureStore.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-route-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app&preferredRegion=!":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app&preferredRegion=! ***!
  \*****************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ private_next_pages_app__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var private_next_pages_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([private_next_pages_app__WEBPACK_IMPORTED_MODULE_0__]);\nprivate_next_pages_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in private_next_pages_app__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => private_next_pages_app__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n        // Next.js Route Loader\n        \n        \n    \n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci5qcz9wYWdlPSUyRl9hcHAmYWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnByZWZlcnJlZFJlZ2lvbj0hLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0EsUUFBK0M7QUFDL0MsUUFBeUQ7QUFDekQsSSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5vZGViaXJkLWZyb250Lz83ODk1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgICAvLyBOZXh0LmpzIFJvdXRlIExvYWRlclxuICAgICAgICBleHBvcnQgKiBmcm9tIFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIlxuICAgICAgICBleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcInByaXZhdGUtbmV4dC1wYWdlcy9fYXBwXCJcbiAgICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-route-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app&preferredRegion=!\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"react\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1ub2RlYmlyZC1mcm9udC8uL25vZGVfbW9kdWxlcy9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/NTc3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ }),

/***/ "@reduxjs/toolkit":
/*!***********************************!*\
  !*** external "@reduxjs/toolkit" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("@reduxjs/toolkit");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("lodash");

/***/ }),

/***/ "next-redux-wrapper":
/*!*************************************!*\
  !*** external "next-redux-wrapper" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("next-redux-wrapper");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next/head");

/***/ }),

/***/ "prop-types":
/*!*****************************!*\
  !*** external "prop-types" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("prop-types");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("react-redux");

/***/ }),

/***/ "redux":
/*!************************!*\
  !*** external "redux" ***!
  \************************/
/***/ ((module) => {

module.exports = require("redux");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-route-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app&preferredRegion=!"));
module.exports = __webpack_exports__;

})();